name: CI

on:
  pull_request:
  push:
    branches:
      - "master"
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: PHP 8.2
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Install PHP requirements
        run: |
          sudo apt-get update && \
          sudo apt-get install -y \
          build-essential \
          autoconf \
          libssl-dev \
          libxml2-dev \
          libsqlite3-dev \
          zlib1g-dev \
          libonig-dev \
          libbz2-dev \
          libcurl4-openssl-dev \
          libjpeg-dev \
          libpng-dev \
          libzip-dev \
          libwebp-dev \
          libxpm-dev \
          libfreetype6-dev \
          liblapacke-dev \
          libopenblas-dev

      - name: Compile PHP
        run: |
          sudo apt-get install -y wget
          wget -O php.tar.gz https://www.php.net/distributions/php-8.2.0.tar.gz
          tar -xf php.tar.gz --strip-components=1
          rm php.tar.gz
          ./configure \
          --prefix=/usr/local/php \
          --with-config-file-path=/usr/local/php/etc \
          --enable-debug \
          --enable-mbstring \
          --with-curl \
          --with-openssl \
          --with-libxml \
          --with-pdo-mysql \
          --with-pdo-sqlite \
          --with-sqlite3 \
          --with-zlib \
          --with-bz2 \
          --with-jpeg \
          --with-webp \
          --with-xpm \
          --with-freetype \
          --with-zip \
          && sudo make -j$(nproc) \
          && sudo make install

      - name: Install extension
        run: |
          cd ${{ github.workspace }}
          ${{ github.workspace }}/php/bin/phpize
          ./configure
          sudo make install
          sudo echo "extension=ndarray.so" > ${{ github.workspace }}/php/etc/conf.d/ndarray.ini

      - name: Run Tests
        run: |
          cd ${{ github.workspace }}
          make test